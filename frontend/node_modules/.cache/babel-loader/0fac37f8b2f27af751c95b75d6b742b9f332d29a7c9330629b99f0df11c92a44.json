{"ast":null,"code":"import axios from \"../axios\";\nexport default {\n  name: \"ReservationForm\",\n  props: {\n    editReservation: Object\n  },\n  data() {\n    return {\n      rooms: [],\n      id: null,\n      reserverName: \"\",\n      startTime: \"\",\n      endTime: \"\",\n      roomId: null\n    };\n  },\n  computed: {\n    isEditMode() {\n      return this.id !== null;\n    }\n  },\n  watch: {\n    editReservation: {\n      immediate: true,\n      handler(newVal) {\n        if (newVal) {\n          this.id = newVal.id;\n          this.reserverName = newVal.reserverName;\n          this.startTime = newVal.startTime.slice(0, 16);\n          this.endTime = newVal.endTime.slice(0, 16);\n          this.roomId = newVal.room.id;\n        }\n      }\n    }\n  },\n  methods: {\n    async submitReservation() {\n      const data = {\n        reserverName: this.reserverName,\n        startTime: this.startTime,\n        endTime: this.endTime,\n        room: {\n          id: this.roomId\n        }\n      };\n      try {\n        if (this.isEditMode) {\n          await axios.put(`/api/reservations/${this.id}`, data);\n          alert(\"수정 완료!\");\n        } else {\n          await axios.post(\"/api/reservations\", data);\n          alert(\"예약 완료!\");\n        }\n        this.$emit(\"reservation-submitted\");\n        this.resetForm();\n      } catch (error) {\n        if (error.response && error.response.status === 409) {\n          alert(error.response.data);\n        } else {\n          alert(\"작업 실패\");\n        }\n      }\n    },\n    resetForm() {\n      this.id = null;\n      this.reserverName = \"\";\n      this.startTime = \"\";\n      this.endTime = \"\";\n      this.roomId = null;\n    }\n  },\n  async created() {\n    const res = await axios.get(\"/api/rooms\");\n    this.rooms = res.data;\n  }\n};","map":{"version":3,"names":["axios","name","props","editReservation","Object","data","rooms","id","reserverName","startTime","endTime","roomId","computed","isEditMode","watch","immediate","handler","newVal","slice","room","methods","submitReservation","put","alert","post","$emit","resetForm","error","response","status","created","res","get"],"sources":["C:\\Users\\user\\Desktop\\Studyroom PRJ\\frontend\\src\\components\\ReservationForm.vue"],"sourcesContent":["<template>\n  <div class=\"form-wrapper\">\n    <h2>스터디룸 예약</h2>\n    <form @submit.prevent=\"submitReservation\">\n      <div class=\"form-row\">\n        <label>예약자 이름:</label>\n        <input v-model=\"reserverName\" required />\n      </div>\n\n      <div class=\"form-row\">\n        <label>시작 시간:</label>\n        <input type=\"datetime-local\" v-model=\"startTime\" required />\n\n        <label>종료 시간:</label>\n        <input type=\"datetime-local\" v-model=\"endTime\" required />\n      </div>\n\n      <div class=\"form-row\">\n        <label>스터디룸 선택:</label>\n        <select v-model=\"roomId\" required>\n          <option v-for=\"room in rooms\" :key=\"room.id\" :value=\"room.id\">\n            {{ room.roomName }} (정원: {{ room.capacity }})\n          </option>\n        </select>\n\n        <button type=\"submit\">{{ isEditMode ? \"수정하기\" : \"예약\" }}</button>\n      </div>\n    </form>\n  </div>\n</template>\n\n<script>\nimport axios from \"../axios\";\n\nexport default {\n  name: \"ReservationForm\",\n  props: {\n    editReservation: Object,\n  },\n  data() {\n    return {\n      rooms: [],\n      id: null,\n      reserverName: \"\",\n      startTime: \"\",\n      endTime: \"\",\n      roomId: null,\n    };\n  },\n  computed: {\n    isEditMode() {\n      return this.id !== null;\n    },\n  },\n  watch: {\n    editReservation: {\n      immediate: true,\n      handler(newVal) {\n        if (newVal) {\n          this.id = newVal.id;\n          this.reserverName = newVal.reserverName;\n          this.startTime = newVal.startTime.slice(0, 16);\n          this.endTime = newVal.endTime.slice(0, 16);\n          this.roomId = newVal.room.id;\n        }\n      },\n    },\n  },\n  methods: {\n    async submitReservation() {\n      const data = {\n        reserverName: this.reserverName,\n        startTime: this.startTime,\n        endTime: this.endTime,\n        room: { id: this.roomId },\n      };\n\n      try {\n        if (this.isEditMode) {\n          await axios.put(`/api/reservations/${this.id}`, data);\n          alert(\"수정 완료!\");\n        } else {\n          await axios.post(\"/api/reservations\", data);\n          alert(\"예약 완료!\");\n        }\n\n        this.$emit(\"reservation-submitted\");\n        this.resetForm();\n      } catch (error) {\n        if (error.response && error.response.status === 409) {\n          alert(error.response.data);\n        } else {\n          alert(\"작업 실패\");\n        }\n      }\n    },\n    resetForm() {\n      this.id = null;\n      this.reserverName = \"\";\n      this.startTime = \"\";\n      this.endTime = \"\";\n      this.roomId = null;\n    },\n  },\n  async created() {\n    const res = await axios.get(\"/api/rooms\");\n    this.rooms = res.data;\n  },\n};\n</script>\n\n<style scoped>\n.form-wrapper {\n  background: #f9f9f9;\n  padding: 16px;\n  margin-top: 20px;\n  border-radius: 8px;\n}\n\n.form-row {\n  margin-bottom: 12px;\n  display: flex;\n  align-items: center;\n  gap: 12px;\n}\n\nlabel {\n  min-width: 100px;\n}\n</style>\n"],"mappings":"AAgCA,OAAOA,KAAI,MAAO,UAAU;AAE5B,eAAe;EACbC,IAAI,EAAE,iBAAiB;EACvBC,KAAK,EAAE;IACLC,eAAe,EAAEC;EACnB,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,EAAE,EAAE,IAAI;MACRC,YAAY,EAAE,EAAE;MAChBC,SAAS,EAAE,EAAE;MACbC,OAAO,EAAE,EAAE;MACXC,MAAM,EAAE;IACV,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,UAAUA,CAAA,EAAG;MACX,OAAO,IAAI,CAACN,EAAC,KAAM,IAAI;IACzB;EACF,CAAC;EACDO,KAAK,EAAE;IACLX,eAAe,EAAE;MACfY,SAAS,EAAE,IAAI;MACfC,OAAOA,CAACC,MAAM,EAAE;QACd,IAAIA,MAAM,EAAE;UACV,IAAI,CAACV,EAAC,GAAIU,MAAM,CAACV,EAAE;UACnB,IAAI,CAACC,YAAW,GAAIS,MAAM,CAACT,YAAY;UACvC,IAAI,CAACC,SAAQ,GAAIQ,MAAM,CAACR,SAAS,CAACS,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;UAC9C,IAAI,CAACR,OAAM,GAAIO,MAAM,CAACP,OAAO,CAACQ,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;UAC1C,IAAI,CAACP,MAAK,GAAIM,MAAM,CAACE,IAAI,CAACZ,EAAE;QAC9B;MACF;IACF;EACF,CAAC;EACDa,OAAO,EAAE;IACP,MAAMC,iBAAiBA,CAAA,EAAG;MACxB,MAAMhB,IAAG,GAAI;QACXG,YAAY,EAAE,IAAI,CAACA,YAAY;QAC/BC,SAAS,EAAE,IAAI,CAACA,SAAS;QACzBC,OAAO,EAAE,IAAI,CAACA,OAAO;QACrBS,IAAI,EAAE;UAAEZ,EAAE,EAAE,IAAI,CAACI;QAAO;MAC1B,CAAC;MAED,IAAI;QACF,IAAI,IAAI,CAACE,UAAU,EAAE;UACnB,MAAMb,KAAK,CAACsB,GAAG,CAAC,qBAAqB,IAAI,CAACf,EAAE,EAAE,EAAEF,IAAI,CAAC;UACrDkB,KAAK,CAAC,QAAQ,CAAC;QACjB,OAAO;UACL,MAAMvB,KAAK,CAACwB,IAAI,CAAC,mBAAmB,EAAEnB,IAAI,CAAC;UAC3CkB,KAAK,CAAC,QAAQ,CAAC;QACjB;QAEA,IAAI,CAACE,KAAK,CAAC,uBAAuB,CAAC;QACnC,IAAI,CAACC,SAAS,CAAC,CAAC;MAClB,EAAE,OAAOC,KAAK,EAAE;QACd,IAAIA,KAAK,CAACC,QAAO,IAAKD,KAAK,CAACC,QAAQ,CAACC,MAAK,KAAM,GAAG,EAAE;UACnDN,KAAK,CAACI,KAAK,CAACC,QAAQ,CAACvB,IAAI,CAAC;QAC5B,OAAO;UACLkB,KAAK,CAAC,OAAO,CAAC;QAChB;MACF;IACF,CAAC;IACDG,SAASA,CAAA,EAAG;MACV,IAAI,CAACnB,EAAC,GAAI,IAAI;MACd,IAAI,CAACC,YAAW,GAAI,EAAE;MACtB,IAAI,CAACC,SAAQ,GAAI,EAAE;MACnB,IAAI,CAACC,OAAM,GAAI,EAAE;MACjB,IAAI,CAACC,MAAK,GAAI,IAAI;IACpB;EACF,CAAC;EACD,MAAMmB,OAAOA,CAAA,EAAG;IACd,MAAMC,GAAE,GAAI,MAAM/B,KAAK,CAACgC,GAAG,CAAC,YAAY,CAAC;IACzC,IAAI,CAAC1B,KAAI,GAAIyB,GAAG,CAAC1B,IAAI;EACvB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}