{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = {\n  class: \"form-wrapper\"\n};\nconst _hoisted_2 = {\n  class: \"form-row\"\n};\nconst _hoisted_3 = {\n  class: \"form-row\"\n};\nconst _hoisted_4 = {\n  class: \"form-row\"\n};\nconst _hoisted_5 = [\"value\"];\nconst _hoisted_6 = {\n  type: \"submit\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[9] || (_cache[9] = _createElementVNode(\"h2\", null, \"스터디룸 예약\", -1 /* HOISTED */)), _createElementVNode(\"form\", {\n    onSubmit: _cache[4] || (_cache[4] = _withModifiers((...args) => $options.submitReservation && $options.submitReservation(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", _hoisted_2, [_cache[5] || (_cache[5] = _createElementVNode(\"label\", null, \"예약자 이름:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.reserverName = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.reserverName]])]), _createElementVNode(\"div\", _hoisted_3, [_cache[6] || (_cache[6] = _createElementVNode(\"label\", null, \"시작 시간:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"datetime-local\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.startTime = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.startTime]]), _cache[7] || (_cache[7] = _createElementVNode(\"label\", null, \"종료 시간:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"datetime-local\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.endTime = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.endTime]])]), _createElementVNode(\"div\", _hoisted_4, [_cache[8] || (_cache[8] = _createElementVNode(\"label\", null, \"스터디룸 선택:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.roomId = $event),\n    required: \"\"\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.rooms, room => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: room.id,\n      value: room.id\n    }, _toDisplayString(room.roomName) + \" (정원: \" + _toDisplayString(room.capacity) + \") \", 9 /* TEXT, PROPS */, _hoisted_5);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vModelSelect, $data.roomId]]), _createElementVNode(\"button\", _hoisted_6, _toDisplayString($options.isEditMode ? \"수정하기\" : \"예약\"), 1 /* TEXT */)])], 32 /* NEED_HYDRATION */)]);\n}","map":{"version":3,"names":["class","type","_createElementBlock","_hoisted_1","_createElementVNode","onSubmit","_cache","_withModifiers","args","$options","submitReservation","_hoisted_2","$event","$data","reserverName","required","_hoisted_3","startTime","endTime","_hoisted_4","roomId","_Fragment","_renderList","rooms","room","key","id","value","roomName","_toDisplayString","capacity","_hoisted_5","_hoisted_6","isEditMode"],"sources":["C:\\Users\\user\\Desktop\\Studyroom PRJ\\frontend\\src\\components\\ReservationForm.vue"],"sourcesContent":["<template>\n  <div class=\"form-wrapper\">\n    <h2>스터디룸 예약</h2>\n    <form @submit.prevent=\"submitReservation\">\n      <div class=\"form-row\">\n        <label>예약자 이름:</label>\n        <input v-model=\"reserverName\" required />\n      </div>\n\n      <div class=\"form-row\">\n        <label>시작 시간:</label>\n        <input type=\"datetime-local\" v-model=\"startTime\" required />\n\n        <label>종료 시간:</label>\n        <input type=\"datetime-local\" v-model=\"endTime\" required />\n      </div>\n\n      <div class=\"form-row\">\n        <label>스터디룸 선택:</label>\n        <select v-model=\"roomId\" required>\n          <option v-for=\"room in rooms\" :key=\"room.id\" :value=\"room.id\">\n            {{ room.roomName }} (정원: {{ room.capacity }})\n          </option>\n        </select>\n\n        <button type=\"submit\">{{ isEditMode ? \"수정하기\" : \"예약\" }}</button>\n      </div>\n    </form>\n  </div>\n</template>\n\n<script>\nimport axios from \"../axios\";\n\nexport default {\n  name: \"ReservationForm\",\n  props: {\n    editReservation: Object,\n  },\n  data() {\n    return {\n      rooms: [],\n      id: null,\n      reserverName: \"\",\n      startTime: \"\",\n      endTime: \"\",\n      roomId: null,\n    };\n  },\n  computed: {\n    isEditMode() {\n      return this.id !== null;\n    },\n  },\n  watch: {\n    editReservation: {\n      immediate: true,\n      handler(newVal) {\n        if (newVal) {\n          this.id = newVal.id;\n          this.reserverName = newVal.reserverName;\n          this.startTime = newVal.startTime.slice(0, 16);\n          this.endTime = newVal.endTime.slice(0, 16);\n          this.roomId = newVal.room.id;\n        }\n      },\n    },\n  },\n  methods: {\n    async submitReservation() {\n      const data = {\n        reserverName: this.reserverName,\n        startTime: this.startTime,\n        endTime: this.endTime,\n        room: { id: this.roomId },\n      };\n\n      try {\n        if (this.isEditMode) {\n          await axios.put(`/api/reservations/${this.id}`, data);\n          alert(\"수정 완료!\");\n        } else {\n          await axios.post(\"/api/reservations\", data);\n          alert(\"예약 완료!\");\n        }\n\n        this.$emit(\"reservation-submitted\");\n        this.resetForm();\n      } catch (error) {\n        if (error.response && error.response.status === 409) {\n          alert(error.response.data);\n        } else {\n          alert(\"작업 실패\");\n        }\n      }\n    },\n    resetForm() {\n      this.id = null;\n      this.reserverName = \"\";\n      this.startTime = \"\";\n      this.endTime = \"\";\n      this.roomId = null;\n    },\n  },\n  async created() {\n    const res = await axios.get(\"/api/rooms\");\n    this.rooms = res.data;\n  },\n};\n</script>\n\n<style scoped>\n.form-wrapper {\n  background: #f9f9f9;\n  padding: 16px;\n  margin-top: 20px;\n  border-radius: 8px;\n}\n\n.form-row {\n  margin-bottom: 12px;\n  display: flex;\n  align-items: center;\n  gap: 12px;\n}\n\nlabel {\n  min-width: 100px;\n}\n</style>\n"],"mappings":";;EACOA,KAAK,EAAC;AAAc;;EAGhBA,KAAK,EAAC;AAAU;;EAKhBA,KAAK,EAAC;AAAU;;EAQhBA,KAAK,EAAC;AAAU;mBAjB3B;;EAyBgBC,IAAI,EAAC;AAAQ;;uBAxB3BC,mBAAA,CA2BM,OA3BNC,UA2BM,G,0BA1BJC,mBAAA,CAAgB,YAAZ,SAAO,sBACXA,mBAAA,CAwBO;IAxBAC,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAHjBC,cAAA,KAAAC,IAAA,KAG2BC,QAAA,CAAAC,iBAAA,IAAAD,QAAA,CAAAC,iBAAA,IAAAF,IAAA,CAAiB;MACtCJ,mBAAA,CAGM,OAHNO,UAGM,G,0BAFJP,mBAAA,CAAsB,eAAf,SAAO,sB,gBACdA,mBAAA,CAAyC;IANjD,uBAAAE,MAAA,QAAAA,MAAA,MAAAM,MAAA,IAMwBC,KAAA,CAAAC,YAAY,GAAAF,MAAA;IAAEG,QAAQ,EAAR;iDAAdF,KAAA,CAAAC,YAAY,E,KAG9BV,mBAAA,CAMM,OANNY,UAMM,G,0BALJZ,mBAAA,CAAqB,eAAd,QAAM,sB,gBACbA,mBAAA,CAA4D;IAArDH,IAAI,EAAC,gBAAgB;IAXpC,uBAAAK,MAAA,QAAAA,MAAA,MAAAM,MAAA,IAW8CC,KAAA,CAAAI,SAAS,GAAAL,MAAA;IAAEG,QAAQ,EAAR;iDAAXF,KAAA,CAAAI,SAAS,E,6BAE/Cb,mBAAA,CAAqB,eAAd,QAAM,sB,gBACbA,mBAAA,CAA0D;IAAnDH,IAAI,EAAC,gBAAgB;IAdpC,uBAAAK,MAAA,QAAAA,MAAA,MAAAM,MAAA,IAc8CC,KAAA,CAAAK,OAAO,GAAAN,MAAA;IAAEG,QAAQ,EAAR;iDAATF,KAAA,CAAAK,OAAO,E,KAG/Cd,mBAAA,CASM,OATNe,UASM,G,0BARJf,mBAAA,CAAuB,eAAhB,UAAQ,sB,gBACfA,mBAAA,CAIS;IAvBjB,uBAAAE,MAAA,QAAAA,MAAA,MAAAM,MAAA,IAmByBC,KAAA,CAAAO,MAAM,GAAAR,MAAA;IAAEG,QAAQ,EAAR;yBACvBb,mBAAA,CAESmB,SAAA,QAtBnBC,WAAA,CAoBiCT,KAAA,CAAAU,KAAK,EAAbC,IAAI;yBAAnBtB,mBAAA,CAES;MAFsBuB,GAAG,EAAED,IAAI,CAACE,EAAE;MAAGC,KAAK,EAAEH,IAAI,CAACE;wBACrDF,IAAI,CAACI,QAAQ,IAAG,QAAM,GAAAC,gBAAA,CAAGL,IAAI,CAACM,QAAQ,IAAG,IAC9C,uBAtBVC,UAAA;2EAmByBlB,KAAA,CAAAO,MAAM,E,GAMvBhB,mBAAA,CAA+D,UAA/D4B,UAA+D,EAAAH,gBAAA,CAAtCpB,QAAA,CAAAwB,UAAU,iC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}